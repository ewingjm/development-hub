name: $(packageVersion)$(rev:.r).0
pool:
  vmImage: windows-2019
pr: none
steps:
  - powershell: |
       $comparisonType = "CurrentCultureIgnoreCase"
       $resultArray = git show --name-only
       $solutionList = ""
   
       foreach ($_ in $resultArray)
       {
           if ($_.StartsWith("solutions") -and $_.Contains("Extract")) 
           {
             $solutionName = $_.Split("/")[1]

             if (!$solutionList.Contains($solutionName)) 
             {
               $solutionList += $solutionName + ";"
               Write-Host "##vso[build.addbuildtag]$solutionName" 
             }
           }
       }
       Write-Host "##vso[task.setvariable variable=solutionList;]$solutionList"
    displayName: 'Configure Build Orchestration'
  - powershell: >-
      Invoke-Expression "&$(Build.SourcesDirectory)\build.ps1 
      -Target Default 
      -ScriptArgs `"--solutionVersion=$(Build.BuildNumber)`"      
      -Verbosity Diagnostic"
    displayName: Cake - Build Package
  - task: VSTest@2
    displayName: 'Test Assemblies'
    inputs:
      testAssemblyVer2: |
        **\*Tests.Unit*.dll
        !**\*TestAdapter.dll
        !**\obj\**
      codeCoverageEnabled: true
  - task: CopyFiles@2
    displayName: "Copy package to artifact staging directory"
    inputs:
      SourceFolder: deploy/bin/Release
      TargetFolder: "$(Build.ArtifactStagingDirectory)"
  - task: PublishBuildArtifacts@1
    inputs:
        pathtoPublish: "$(Build.ArtifactStagingDirectory)"
        artifactName: "DevelopmentHub"
    condition: succeeded()
trigger:
  batch: true
  branches:
    include: ["master"]
  paths:
    include: [
      "Data/Configuration/*",
      "Data/Reference/*",
      "deploy/*",
      "solutions/*",
      "*.yml",
      "*.cake",
      "*.ps1"
      ]
variables:
  - name: solutionList
    value: ''
  - group: Development Hub
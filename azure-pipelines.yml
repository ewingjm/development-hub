name: $(GITVERSION_FullSemVer)
pool:
  vmImage: 'windows-latest'
pr: none
trigger:
  batch: true
  branches:
    include:
      - master
stages:
  - template: templates/include-build-stage.yml
  - template: templates/include-solution-checker-stage.yml
    parameters:
      serviceConnection: 'Developer Instance'
  - template: templates/include-deploy-stage.yml
    parameters:
      environment: 'test'
      resetServiceConnection: 'Developer Instance (adminuser)'
      deployServiceConnection: 'Developer Instance'
      environmentVariableGroup: 'Environment - Test'
  - template: templates/include-test-stage.yml
    parameters:
      environmentVariableGroup: 'Environment - Test'
  - stage: CreateRelease
    displayName: 'Create release'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    jobs:
      - job: CreateReleaseJob
        displayName: 'Create release'
        dependsOn:
          - 'Build'
          - 'Test'
        variables: 
          SemVer: $[ stageDependencies.Build.BuildJob.outputs['OutputSemVerTask.SemVer'] ]
        steps:
        - task: GitHubRelease@1
          displayName: Create GitHub release
          inputs:
            gitHubConnection: 'GitHub (ewingjm)'
            repositoryName: '$(Build.Repository.Name)'
            action: 'create'
            target: '$(Build.SourceVersion)'
            tagSource: 'userSpecifiedTag'
            tag: 'v$(SemVer)'
            releaseNotesSource: 'inline'
            assets: |
              $(Pipeline.Workspace)/Development Hub/*.zip
              $(Pipeline.Workspace)/Development Hub/*.md
            isPreRelease: true
            changeLogCompareToRelease: 'lastNonDraftRelease'
            changeLogType: 'commitBased'